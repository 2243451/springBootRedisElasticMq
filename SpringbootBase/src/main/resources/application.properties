server.port=8765
# Mysql 数据库
spring.datasource.url=jdbc:mysql://192.168.183.220:3306/lyf?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Hikari 连接池
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=UserHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# MyBatis 配置
mybatis.type-aliases-package=com.lyf.domain
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# PageHelper 分页配置
pagehelper.helper-dialect= mysql
pagehelper.reasonable= true
#pagehelper.params= count=countSql
#pagehelper.support-methods-arguments= true
#pagehelper.offset-as-page-num= true
#pagehelper.row-bounds-with-count= true

# Log 日志打印
logging.level.root=info
logging.level.com.lyf=info
logging.level.com.lyf.dao=debug
logging.level.com.lyf.rabbit.RabbitConfig=debug

# Redis 配置
spring.redis.host=192.168.183.220
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=123456

# RabbitMQ 配置
spring.rabbitmq.host=192.168.183.220
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

## 生产端配置
# 开启发布确认,就是confirm模式. 消费端ack应答后,才将消息从队列中删除
spring.rabbitmq.publisher-confirms=true
# 发布返回
spring.rabbitmq.publisher-returns=true

## 消费端配置
# 手动ack
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 消费者最小数量
spring.rabbitmq.listener.simple.concurrency=1
# 消费者最大数量
spring.rabbitmq.listener.simple.max-concurrency=10
# 在单个请求中处理的消息个数，他应该大于等于事务数量(unack的最大数量)
spring.rabbitmq.listener.simple.prefetch=1
#  设置为false，会丢弃消息或者重新发布到死信队列
spring.rabbitmq.listener.simple.default-requeue-rejected=false

## 模板配置
#设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true

# Elasticsearch配置
spring.data.elasticsearch.cluster-name=elasticsearch-cluster
# 单节点
#spring.data.elasticsearch.cluster-nodes=192.168.1.69:9300
# 多节点
spring.data.elasticsearch.cluster-nodes=192.168.1.69:9300,192.168.1.70:9300,192.168.1.71:9300
# 关闭es健康检查
#management.health.elasticsearch.enabled=false
# 或者设置rest访问地址
spring.elasticsearch.rest.uris=http://192.168.1.70:9200